<%- include('./meta.ejs') %>


<!-- Styles -->
<style>
.alert {
position: relative;
    padding: 0.75rem 1.25rem;
    margin-bottom: 1rem rem;
    border: 1px solid transparent;
    border-radius: 0.25rem;
    }

    .alert-warning {
    color: #856404;
    background-color: #fff3cd;
    border-color: #ffeeba;
    }

     .alert-error {
    color: #851c04;
    background-color: #e02424;
    border-color: #e02424;
    }

    .spinner-border {
    display: inline-block;
    width: 2rem;
    height: 2rem;
    vertical-align: -0.125em;
    border: .25em solid currentColor;
    border-right-color: transparent;
    border-radius: 50%;
    -webkit-animation: .75s linear infinite spinner-border;
    animation: .75s linear infinite spinner-border;
    }


    #log-container { overflow: auto; height: 150px; }

.log-warn { color: orange }
.log-error { color: red }
.log-info { color: skyblue }
.log-log { color: silver }

.log-warn, .log-error { font-weight: bold; }
</style>


<!-- JavaScript -->
  <script>
rewireLoggingToElement(
    () => document.getElementById("log"),
    () => document.getElementById("log-container"), true);

function rewireLoggingToElement(eleLocator, eleOverflowLocator, autoScroll) {
    fixLoggingFunc('log');
    fixLoggingFunc('debug');
    fixLoggingFunc('warn');
    fixLoggingFunc('error');
    fixLoggingFunc('info');

    function fixLoggingFunc(name) {
        console['old' + name] = console[name];
        console[name] = function(...arguments) {
            const output = produceOutput(name, arguments);
            const eleLog = eleLocator();

            if (autoScroll) {
                const eleContainerLog = eleOverflowLocator();
                const isScrolledToBottom = eleContainerLog.scrollHeight - eleContainerLog.clientHeight <= eleContainerLog.scrollTop + 1;
                eleLog.innerHTML += output + "<br>";
                if (isScrolledToBottom) {
                    eleContainerLog.scrollTop = eleContainerLog.scrollHeight - eleContainerLog.clientHeight;
                }
            } else {
                eleLog.innerHTML += output + "<br>";
            }

            console['old' + name].apply(undefined, arguments);
        };
    }

    function produceOutput(name, args) {
        return args.reduce((output, arg) => {
            return output +
                "<span class=\"log-" + (typeof arg) + " log-" + name + "\">" +
                    (typeof arg === "object" && (JSON || {}).stringify ? JSON.stringify(arg) : arg) +
                "</span>&nbsp;";
        }, '');
    }
}


setInterval(() => {
  const method = (['log', 'debug', 'warn', 'error', 'info'][Math.floor(Math.random() * 5)]);
  wait(10)
  console[method](method, 'logging something...');
}, 200);

  </script>

<body>
<div id="loader-wrapper">
    <center>
    <div class="preloader">
     <div id="loader" class="loader loader-1">
  <div style="color: white;" class="spinner-border"></div>
    </div>
    </div>
    </center>
    <div class="loader-section section-left"></div>
    <div class="loader-section section-right"></div>
    
</div>
<body>
 <% if(user) { %>
                <% 
                let guild = bot.guilds.cache.get(config.server.id).members.cache.get(user.id);
                if(guild) {
                if(guild.roles.cache.get(roles.yonetici) || guild.roles.cache.get(roles.moderator) || guild.roles.cache.get(roles.moderator)) {
                %>
                <div id="log-container">

               <div class="alert alert-warning" role="alert">
 {!} [console] says : <pre id="log"></pre>

</div>
                <% }} %>
            <% } %>

</div>
    <nav class="navbar navbar-expand-lg navbar-dark p-2 pl-4 pr-4 bg-vcodes">
        <div class="container">
        <a class="navbar-brand logoholder" href="/"><img id="logoimg" style="height:55px; width:55px;" src="../../img/logo.png" alt="vCodes"/></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarColor02" aria-controls="navbarColor02" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
      
        <div class="collapse navbar-collapse" id="navbarColor02">
          <ul class="navbar-nav mainlink mr-auto">
            <li class="nav-item">
              <a class="nav-link nvhome" href="/"><i class="fad fa-home mr-1"></i> Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/bots"><i class="fad fa-robot mr-1"></i> Bots</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/certification"><i class="fad fa-badge-check mr-1"></i> Certification</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/partners"><i class="fad fa-handshake mr-1"></i> Partners</a>
            </li>
            <% if(user) { %>
                <% 
                let guild = bot.guilds.cache.get(config.server.id).members.cache.get(user.id);
                if(guild) {
                if(guild.roles.cache.get(roles.yonetici) || guild.roles.cache.get(roles.moderator) || guild.roles.cache.get(roles.workers)) {
                %>
                <li class="nav-item">
                    <a class="nav-link" href="/admin"><i class="fad fa-magic mr-1"></i> Admin Panel</a>
                </li>
                <% }} %>
            <% } %>
          </ul>
          <ul class="navbar-nav ml-auto">
          <li class="nav-item">
              <a class="nav-link nvhome" href="/index/light"><i style="font-size: 30px" class="fad fa-sun"></i></a>
            </li>
            <% if(user) {%>
              <li class="nav-item dropdown" style="border-radius: 20px;">
                  <a class="nav-link btn btn-discord dropdown-toggle has-text-white"
                  style="border-radius: 20px;" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <img src="https://cdn.discordapp.com/avatars/<%=user.id%>/<%=user.avatar%>" class="nav-userProfile-image"/><b><%=user.username%></b><small>#<%=user.discriminator%></small>
                  </a>
                <div class="dropdown-menu dropdown-menu-right animate slideIn" style="max-width:220px!important; border-radius: 10px;">
                    <a class="dropdown-item" href="/user/<%=user.id %>/"><i class="fa fa-id-card mr-2"></i> Profile</a>
                    <a class="dropdown-item" href="/addbot"><i class="fa fa-paper-plane mr-2"></i> Add Bot</a>
                    <a class="dropdown-item" href="/codes"><i class="fa fa-code mr-2"></i> Code Share</a>
                    <a class="dropdown-item" href="/uptime/links"><i class="fa fa-sync-alt mr-2"></i> Uptime</a>
                  
                  
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item dropdown-danger" href="/logout"><i class="fad fa-sign-out mr-2"></i> Logout</a>
                </div>
              </li>
            <% } else { %>
            <li class="nav-item">
                <a class="btn btn-discord nav-link" style="border-radius: 20px;" href="/login"><i class="fad fa-user mr-1"></i> Login</a>
            </li>
	    <% } %>
          </ul>
        </div>
        </div>
      </nav>
    
  
<%
let imgBack = "https://i.hizliresim.com/2sdunq.png";
%>